{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-button/item-status-button.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onInput","type","placeholder","TodoListItem","label","important","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elems","filter","item","visible","map","id","itemProps","key","ItemStatusButton","name","elemStyle","status","ItemStatusFilter","state","buttonsArr","active","event","btnStyle","target","textContent","props","onClickAll","onClickActive","onClickDone","string","this","setState","buttons","React","Component","ItemAddForm","onLabelChahge","value","onSubmit","preventDefault","onAddItem","onChange","App","nextId","todoData","createTodoItem","searchInput","deleteItem","addItem","text","newItem","toggleProp","filterLable","findString","RegExp","test","filterActive","filterDone","resetFilters","arr","propName","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1758f833.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo&nbsp;List</h1>\r\n      <h2>{toDo}&nbsp;more to&nbsp;do, {done}&nbsp;done</h2>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nconst SearchPanel = ({ onInput }) => {\r\n\r\n  return (\r\n    <input type=\"text\"\r\n      placeholder=\"Type to search\"\r\n      className=\"form-control search-input\"\r\n      onInput={onInput}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, important, done, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const classNames = `todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`;\r\n\r\n    return (\r\n      <span className={classNames}>\r\n\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n\r\n      </span>\r\n    );\r\n  \r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elems = todos\r\n    .filter(item => item.visible)\r\n    .map((item) => {\r\n\r\n      const { id, ...itemProps } = item;\r\n\r\n      return (\r\n        <li key={id} className=\"list-group-item\">\r\n          <TodoListItem\r\n            {...itemProps}\r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleImportant={() => onToggleImportant(id)}\r\n            onToggleDone={() => onToggleDone(id)} />\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      {elems}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nconst ItemStatusButton = ({ name, status }) => {\r\n\r\n  const elemStyle = status ? 'btn btn-info' : 'btn btn-outline-secondary';\r\n\r\n  return (\r\n    <button\r\n      className={elemStyle}>\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ItemStatusButton;","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nimport ItemStatusButton from '../item-status-button/item-status-button';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n\r\n  state = {\r\n    buttonsArr: [\r\n      { label: 'All', active: false },\r\n      { label: 'Active', active: false },\r\n      { label: 'Done', active: false },\r\n    ]\r\n  }\r\n\r\n  btnStyle(string) {\r\n    this.setState(({ buttonsArr }) => {\r\n      const newBtnArr = buttonsArr.map(item => {\r\n        if (item.label === string) {\r\n          item.active = true\r\n        } else {\r\n          item.active = false\r\n        }\r\n        return item\r\n      });\r\n      return {\r\n        buttonsArr: newBtnArr\r\n      }\r\n    })\r\n  }\r\n\r\n  onClick = (event) => {\r\n\r\n    this.btnStyle(event.target.textContent);\r\n\r\n    const { onClickAll, onClickActive, onClickDone } = this.props;\r\n\r\n    switch (event.target.textContent) {\r\n      case 'All':\r\n        onClickAll();\r\n        break;\r\n      case 'Active':\r\n        onClickActive();\r\n        break;\r\n      case 'Done':\r\n        onClickDone();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { buttonsArr } = this.state;\r\n    const buttons = buttonsArr.map(item => {\r\n      const { label, active } = item;\r\n\r\n      return (\r\n        <ItemStatusButton\r\n          key={label}\r\n          name={label}\r\n          status={active} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\"\r\n        onClick={this.onClick}>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChahge = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    });    \r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <form\r\n        className=\"item-add-form d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What needs to be done\"\r\n          className=\"form-control\"\r\n          value={this.state.label}\r\n          onChange={this.onLabelChahge} />\r\n        <button\r\n          className=\"btn btn-outline-secondary\">\r\n          New&nbsp;Item\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\n\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n  // using class fields\r\n  nextId = 10;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Learn React'),\r\n      this.createTodoItem('Build App'),\r\n      this.createTodoItem('Fix Bugs'),\r\n    ],\r\n    searchInput: '',\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      id: this.nextId++,\r\n      important: false,\r\n      done: false,\r\n      visible: true,\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const newTodoData = todoData.filter(item => item.id !== id);\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    this.setState(({ todoData }) => {\r\n      const newItem = this.createTodoItem(text);\r\n      const newTodoData = [...todoData, newItem]\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleProp(arr, id, propName) {\r\n    const newArr = arr.map(item => {\r\n      if (item.id === id) {\r\n        item[propName] = !item[propName]\r\n      }\r\n      return item;\r\n    });\r\n    return newArr;\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'important')\r\n      }\r\n    });\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'done')\r\n      }\r\n    });\r\n  }\r\n\r\n  filterLable = (event) => {    \r\n    // user search input to regexp\r\n    const findString = new RegExp(event.target.value, 'im');\r\n\r\n    // reset state\r\n    this.setState(({ todoData }) => {\r\n\r\n      // build new data array \r\n      const filtredTodoData = todoData.map(item => {\r\n\r\n          // if user input match with item label\r\n          // item will be visible\r\n          if (findString.test(item.label)) {\r\n            item.visible = true\r\n          } else {\r\n            item.visible = false\r\n          }\r\n          return item\r\n        });\r\n\r\n      return {\r\n        todoData: filtredTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  filterActive = () => {\r\n    this.setState(({ todoData }) => {\r\n      const activeData = todoData.map(item => {\r\n        if (!item.done) {\r\n          item.visible = true\r\n        }else{\r\n          item.visible = false\r\n        }\r\n        return item\r\n      });\r\n\r\n      return {\r\n        todoData: activeData\r\n      }\r\n    })\r\n  }\r\n\r\n  filterDone = () => {\r\n    this.setState(({ todoData }) => {\r\n      const doneData = todoData.map(item => {\r\n        if (item.done) {\r\n          item.visible = true\r\n        }else{\r\n          item.visible = false\r\n        }\r\n        return item\r\n      });\r\n\r\n      return {\r\n        todoData: doneData\r\n      }\r\n    })\r\n  }\r\n\r\n  resetFilters = () => {\r\n    this.setState(({ todoData }) => {\r\n      const unfitredData = todoData.map(item => {\r\n        item.visible = true;\r\n        return item\r\n      });\r\n\r\n      return {\r\n        todoData: unfitredData\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData } = this.state;\r\n\r\n    const doneCount = todoData.filter(item => item.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel\r\n            onInput={this.filterLable} />\r\n          <ItemStatusFilter\r\n            onClickAll={this.resetFilters}\r\n            onClickActive={this.filterActive}\r\n            onClickDone={this.filterDone} />\r\n        </div>\r\n        <TodoList\r\n          todos={todoData}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n        <ItemAddForm\r\n          onAddItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}