{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/lang/lang.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","lang","langChanger","textMoreToDo","textDone","textToDoList","className","onClick","label","SearchPanel","onSearchInput","type","placeholder","textTypeToSearch","onInput","event","target","value","TodoListItem","important","onDeleted","onToggleImportant","onToggleDone","classNames","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","this","props","btns","name","textFilterAll","textFilterActive","textFilterDone","filter","onFilterChange","buttons","React","Component","ItemAddForm","state","onLabelChahge","setState","onSubmit","preventDefault","onAddItem","textAddItemInput","onChange","textNewItem","Langs","indicator","typeToSearch","App","nextId","todoData","searchInput","activeFilter","activeLang","deleteItem","addItem","text","newItem","createTodoItem","toggleProp","console","log","length","arr","propName","items","search","RegExp","visibleItems","filterItems","searchItems","doneCount","todoCount","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cc7c9305.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ toDo, done, lang, langChanger }) => {\r\n  const { textMoreToDo, textDone, textToDoList } = lang;\r\n\r\n  return (\r\n    <div className=\"app-header d-flex \">\r\n      <h1>{textToDoList}</h1>\r\n      <button\r\n        className=\"btn btn-outline-secondary btn-sm app-header__lang\"\r\n        onClick={langChanger}>\r\n        {lang.label}\r\n      </button>\r\n      <h2>{toDo}{textMoreToDo}{done}{textDone}</h2>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nconst SearchPanel = ({ onSearchInput, lang }) => {\r\n  return (\r\n    <input type=\"text\"\r\n      placeholder={lang.textTypeToSearch}\r\n      className=\"form-control search-input\"      \r\n      onInput={event => onSearchInput(event.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, important, done, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const classNames = `todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`;\r\n\r\n    return (\r\n      <span className={classNames}>\r\n\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n\r\n      </span>\r\n    );\r\n  \r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      {elements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends React.Component {  \r\n  \r\n  render() {\r\n    const { textFilterAll, textFilterActive, textFilterDone } = this.props.lang;\r\n\r\n    const btns = [\r\n      { name: 'all', label: textFilterAll },\r\n      { name: 'active', label: textFilterActive },\r\n      { name: 'done', label: textFilterDone },\r\n    ];\r\n\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = btns.map(({ name, label }) => {\r\n      \r\n      const classNames = (filter === name) ? 'btn btn-info' : 'btn btn-outline-secondary';\r\n      return (\r\n        <button\r\n          key={name}\r\n          type=\"button\"\r\n          className={classNames}\r\n          onClick={() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChahge = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    });    \r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <form\r\n        className=\"item-add-form d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={this.props.lang.textAddItemInput}\r\n          className=\"form-control\"\r\n          value={this.state.label}\r\n          onChange={this.onLabelChahge} />\r\n        <button\r\n          className=\"btn btn-outline-secondary\">\r\n          {this.props.lang.textNewItem}\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}","/**LANG FILE\r\n * \r\n * \r\n * \r\n * \r\n */\r\n\r\nexport const Langs = [\r\n  {\r\n    indicator: 'ru',\r\n    label: 'RU',\r\n    // app.js\r\n\r\n    // app-header.js\r\n    textToDoList: 'Список Дел',\r\n    textMoreToDo: ` осталось, `,\r\n    textDone: ' готово',\r\n\r\n    // search-panel.js\r\n    typeToSearch: 'поиск дел',\r\n\r\n    // item-add-form.js\r\n    textNewItem: 'Добавить',\r\n\r\n    textTypeToSearch: 'начните вводить',\r\n    textFilterAll: 'Все',\r\n    textFilterActive: 'Активно',\r\n    textFilterDone: 'Готово',\r\n    textAddItemInput: 'что нужно сделать',\r\n  },\r\n\r\n  {\r\n    indicator: 'en',\r\n    label: 'EN',\r\n    textToDoList: 'ToDo List',\r\n    textMoreToDo: ' more to do, ',\r\n    textDone: ' done',\r\n    typeToSearch: 'type to searchs',\r\n    textNewItem: 'Add Item',\r\n    textTypeToSearch: 'type to search',\r\n    textFilterAll: 'All',\r\n    textFilterActive: 'Active',\r\n    textFilterDone: 'Done',\r\n    textAddItemInput: 'what needs to be done',\r\n  },\r\n]","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\nimport { Langs } from '../lang/lang';\r\n\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n  // using class fields\r\n  nextId = 10;\r\n\r\n  state = {\r\n    todoData: [\r\n      {\r\n        label: 'Активная задача',\r\n        important: false,\r\n        done: false,\r\n        id: 1,\r\n      },\r\n      {\r\n        label: 'Завершенная задача',\r\n        important: false,\r\n        done: true,\r\n        id: 3,\r\n      },\r\n      {\r\n        label: 'Важная задача',\r\n        important: true,\r\n        done: false,\r\n        id: 2,\r\n      },      \r\n      {\r\n        label: 'Завершенная важная задача',\r\n        important: true,\r\n        done: true,\r\n        id: 4,\r\n      },\r\n    ],\r\n\r\n    //user input from search-panel component\r\n    // default: emty string\r\n    searchInput: '',\r\n\r\n    // filter status from item-status-filter component\r\n    // default: string 'all'\r\n    activeFilter: 'all',\r\n\r\n    activeLang: 0,\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      important: false,\r\n      done: false,\r\n      id: this.nextId++,\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const newTodoData = todoData.filter(item => item.id !== id);\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    this.setState(({ todoData }) => {\r\n      const newItem = this.createTodoItem(text);\r\n      const newTodoData = [...todoData, newItem]\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleProp(arr, id, propName) {\r\n    const newArr = arr.map(item => {\r\n      if (item.id === id) {\r\n        item[propName] = !item[propName]\r\n      }\r\n      return item;\r\n    });\r\n    return newArr;\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'important')\r\n      }\r\n    });\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'done')\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchInput = (searchInput) => {\r\n    this.setState({ searchInput });\r\n  }\r\n\r\n  onFilterChange = (activeFilter) => {\r\n    this.setState({ activeFilter });\r\n  }\r\n\r\n  searchItems(items, searchInput) {\r\n    if (!searchInput) {\r\n      return items\r\n    }\r\n\r\n    return items.filter(item => {\r\n      return item.label.search(new RegExp(searchInput, 'im')) > -1;\r\n    });\r\n  }\r\n\r\n  filterItems(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items\r\n      case 'active':\r\n        return items.filter(item => !item.done)\r\n      case 'done':\r\n        return items.filter(item => item.done)\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  langChanger = () => {\r\n    console.log('langChanger' + this.state.activeLang + (Langs.length));\r\n    if (this.state.activeLang < (Langs.length - 1)) {\r\n      this.setState((state) => {\r\n        return state.activeLang = state.activeLang + 1;\r\n      })\r\n    } else {\r\n      this.setState({ activeLang: 0 })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData, searchInput, activeFilter, activeLang } = this.state;\r\n\r\n    const visibleItems = this.filterItems(\r\n      this.searchItems(todoData, searchInput), activeFilter);\r\n\r\n    const doneCount = todoData.filter(item => item.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    const lang = Langs[activeLang];\r\n\r\n    return (\r\n      <div className=\"todo-app\" >\r\n        <AppHeader\r\n          toDo={todoCount}\r\n          done={doneCount}\r\n          lang={lang}\r\n          langChanger={this.langChanger} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchInput={this.onSearchInput} lang={lang} />\r\n          <ItemStatusFilter\r\n            lang={lang}\r\n            filter={activeFilter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n        <TodoList todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n        <ItemAddForm onAddItem={this.addItem} lang={lang} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(<App />, document.querySelector('.root'))"],"sourceRoot":""}