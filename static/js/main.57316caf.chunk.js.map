{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onSearchInput","type","placeholder","onInput","event","target","value","TodoListItem","label","important","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","React","Component","ItemAddForm","state","onLabelChahge","setState","onSubmit","preventDefault","props","onAddItem","this","onChange","App","nextId","todoData","createTodoItem","searchInput","activeFilter","deleteItem","filter","addItem","text","newItem","toggleProp","arr","propName","array","string","search","RegExp","visibleItems","searchItems","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57316caf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo&nbsp;List</h1>\r\n      <h2>{toDo}&nbsp;more to&nbsp;do, {done}&nbsp;done</h2>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nconst SearchPanel = ({ onSearchInput }) => {\r\n  return (\r\n    <input type=\"text\"\r\n      placeholder=\"type to search\"\r\n      className=\"form-control search-input\"      \r\n      onInput={event => onSearchInput(event.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ label, important, done, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const classNames = `todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`;\r\n\r\n    return (\r\n      <span className={classNames}>\r\n\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n\r\n      </span>\r\n    );\r\n  \r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      {elements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn btn-info\">All</button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChahge = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    });    \r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAddItem(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <form\r\n        className=\"item-add-form d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What needs to be done\"\r\n          className=\"form-control\"\r\n          value={this.state.label}\r\n          onChange={this.onLabelChahge} />\r\n        <button\r\n          className=\"btn btn-outline-secondary\">\r\n          New&nbsp;Item\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport ItemAddForm from '../item-add-form/item-add-form';\r\n\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends React.Component {\r\n  // using class fields\r\n  nextId = 10;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Learn React'),\r\n      this.createTodoItem('Build App'),\r\n      this.createTodoItem('Fix Bugs'),\r\n    ],\r\n\r\n    //user input from search-panel component\r\n    // default: emty string\r\n    searchInput: '',\r\n\r\n    // filter status from item-status-filter component\r\n    // default: string 'all'\r\n    activeFilter: 'all',\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      important: false,\r\n      done: false,\r\n      id: this.nextId++,\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const newTodoData = todoData.filter(item => item.id !== id);\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    this.setState(({ todoData }) => {\r\n      const newItem = this.createTodoItem(text);\r\n      const newTodoData = [...todoData, newItem]\r\n\r\n      return {\r\n        todoData: newTodoData\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleProp(arr, id, propName) {\r\n    const newArr = arr.map(item => {\r\n      if (item.id === id) {\r\n        item[propName] = !item[propName]\r\n      }\r\n      return item;\r\n    });\r\n    return newArr;\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'important')\r\n      }\r\n    });\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, 'done')\r\n      }\r\n    });\r\n  }\r\n\r\n  onSearchInput = (searchInput) => {\r\n    this.setState({ searchInput });\r\n  }\r\n\r\n  searchItems(array, string) {\r\n    if (!string) {\r\n      return array\r\n    }\r\n\r\n    return array.filter(item => {\r\n      return item.label.search(new RegExp(string, 'im')) > -1;\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData, searchInput } = this.state;\r\n\r\n    const visibleItems = this.searchItems(todoData, searchInput);\r\n\r\n    const doneCount = todoData.filter(item => item.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel\r\n            onSearchInput={this.onSearchInput} />\r\n          <ItemStatusFilter />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n        <ItemAddForm\r\n          onAddItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}